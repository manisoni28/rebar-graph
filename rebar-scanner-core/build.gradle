  buildscript {
	ext {
		springBootVersion = '2.1.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
  }
apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
jar {
    enabled = true
}
dependencies {
    compile project(':rebar-util')
    compile project(':rebar-neo4j-driver')

    compile "org.slf4j:slf4j-api:${SLF4J_VERSION}"
    compile "org.slf4j:jcl-over-slf4j:${SLF4J_VERSION}"
    compile 'io.github.classgraph:classgraph:4.6.10'
    compile "io.micrometer:micrometer-core:${MICROMETER_VERSION}"
    compile "com.fasterxml.jackson.core:jackson-databind:${JACKSON_VERSION}"
    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-cbor:${JACKSON_VERSION}"
    compile 'io.reactivex.rxjava2:rxjava:2.2.6'
    compile "org.eclipse.jgit:org.eclipse.jgit:${JGIT_VERSION}" 
    compile 'it.sauronsoftware.cron4j:cron4j:2.2.5'
    compile 'org.codehaus.groovy:groovy-all:2.5.5'

    compile "com.google.guava:guava:${GUAVA_VERSION}"
    compile "com.machinezoo.noexception:noexception:${NOEXCEPTION_VERSION}"

	compile 'org.springframework.boot:spring-boot-starter'
	testCompile  'org.springframework.boot:spring-boot-starter-test'

    testCompile "org.assertj:assertj-core:${ASSERTJ_VERSION}"
    testCompile "ch.qos.logback:logback-classic:${LOGBACK_VERSION}"

    testImplementation("org.junit.jupiter:junit-jupiter-api:$JUNIT_VERSION")
    testCompile("org.junit.jupiter:junit-jupiter-params:$JUNIT_VERSION")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:$JUNIT_VERSION")
}
